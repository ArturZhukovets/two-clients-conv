import { CharIndex } from './CharIndex.js';
import type { FastTrieBlobBitMaskInfo } from './FastTrieBlobBitMaskInfo.js';
export declare class FastTrieBlobInternals implements FastTrieBlobBitMaskInfo {
    readonly nodes: number[][];
    readonly charIndex: CharIndex;
    readonly NodeMaskEOW: number;
    readonly NodeMaskChildCharIndex: number;
    readonly NodeChildRefShift: number;
    readonly isIndexDecoderNeeded: boolean;
    readonly sorted = true;
    constructor(nodes: number[][], charIndex: CharIndex, maskInfo: FastTrieBlobBitMaskInfo);
}
/**
 * Sorts the nodes in place if possible.
 * @param nodes
 * @param mask
 * @returns
 */
export declare function sortNodes(nodes: number[][], mask: number): number[][];
export declare function assertSorted(nodes: number[][], mask: number): void;
//# sourceMappingURL=FastTrieBlobInternals.d.ts.map