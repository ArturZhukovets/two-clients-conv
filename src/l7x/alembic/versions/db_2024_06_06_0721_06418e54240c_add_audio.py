#####################################################################################################
"""add audio.

Revision ID: 06418e54240c
Revises: dcbcd14d03c3
Create Date: 2024-06-06 07:21:01.396212+00:00

"""
#####################################################################################################

from collections.abc import Sequence
from typing import Final

from alembic.op import (
    add_column,
    alter_column,
    create_foreign_key,
    create_table,
    drop_column,
    drop_constraint,
    drop_table,
    f as _alembic_f,
    get_bind,
)
from sqlalchemy import Column, LargeBinary, PrimaryKeyConstraint, String, text

from l7x.db.db_types import POSTGRESQL_DATETIME, POSTGRESQL_UUID
from l7x.utils.datetime_utils import now_utc

#####################################################################################################

# revision identifiers, used by Alembic.
# pylint: disable=invalid-name
revision: Final[str] = '06418e54240c'
down_revision: Final[str | None] = 'dcbcd14d03c3'
branch_labels: Final[Sequence[str] | None] = None
depends_on: Final[str | None] = None


# pylint: enable=invalid-name

#####################################################################################################

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    create_table(
        'audio',
        Column('primary_uuid', POSTGRESQL_UUID, server_default=text('gen_random_uuid()'), nullable=False),
        Column('create_ts', POSTGRESQL_DATETIME(timezone=True), nullable=True),
        Column('audio_raw', LargeBinary(length=104857600), nullable=False),
        PrimaryKeyConstraint('primary_uuid', name=_alembic_f('pk__audio')),
    )
    alter_column('departments', 'name', existing_type=String(length=1000), nullable=False)
    alter_column('departments', 'address', existing_type=String(length=1000), nullable=False)
    add_column('texts', Column('audio_id', POSTGRESQL_UUID, nullable=True))
    create_foreign_key('fk_texts_audio_primary_uuid_audio_id', 'texts', 'audio', ['audio_id'], ['primary_uuid'])

    conn = get_bind()

    old_audio_data = conn.execute(text("select primary_uuid, audio_raw from texts")).fetchall()
    insert_raw_audio_query = """
    INSERT INTO audio (audio_raw, create_ts)
    VALUES (:audio_raw, :create_ts)
    RETURNING primary_uuid
    """
    update_audio_id_query = """
    UPDATE texts
    SET audio_id = :audio_uuid
    WHERE primary_uuid = :primary_uuid
    """

    for texts_uuid, raw_audio in old_audio_data:
        audio_uuid = None
        if raw_audio is not None:
            audio_uuid = conn.execute(
                text(insert_raw_audio_query),
                {'audio_raw': raw_audio, 'create_ts': now_utc()}
            ).fetchone()[0]
        conn.execute(text(update_audio_id_query), {'audio_uuid': audio_uuid, 'primary_uuid': texts_uuid})

    drop_column('texts', 'audio_raw')
    # # ### end Alembic commands ###

#####################################################################################################

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    add_column('texts', Column('audio_raw', LargeBinary(length=104857600), nullable=True))

    conn = get_bind()
    old_texts_data = conn.execute(text("select primary_uuid, audio_id from texts")).fetchall()
    select_audio_raw_query = """
    SELECT audio_raw
    FROM audio
    WHERE primary_uuid = :primary_uuid
    """

    update_audio_raw_query = """
    UPDATE texts
    SET audio_id = NULL, audio_raw = :audio_raw
    WHERE primary_uuid = :primary_uuid
    """

    delete_audio_query = """
    DELETE FROM audio
    WHERE primary_uuid = :audio_uuid
    """

    for texts_uuid, audio_uuid in old_texts_data:
        raw_audio = conn.execute(
            text(select_audio_raw_query),
            {'primary_uuid': audio_uuid}
        ).fetchone()[0]

        conn.execute(text(update_audio_raw_query), {'audio_raw': raw_audio, 'primary_uuid': texts_uuid})
        conn.execute(text(delete_audio_query), {'audio_uuid': audio_uuid})

    drop_constraint('fk_texts_audio_primary_uuid_audio_id', 'texts', type_='foreignkey')
    drop_column('texts', 'audio_id')
    alter_column('departments', 'address', existing_type=String(length=1000), nullable=True)
    alter_column('departments', 'name', existing_type=String(length=1000), nullable=True)
    drop_table('audio')
    # ### end Alembic commands ###

#####################################################################################################
